{"ast":null,"code":"import _toConsumableArray from\"/Users/jacob/Web/django-ecommerce/backend/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/jacob/Web/django-ecommerce/backend/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{Link,useParams,useNavigate}from'react-router-dom';import{Row,Col,Image,ListGroup,Button,Card,Form}from'react-bootstrap';// react redux import for global state handling+API calls\nimport{useDispatch,useSelector}from'react-redux';import{listProductDetails}from'../reduxState/actions/productActions';// components\nimport Rating from'../components/products/Rating';import Loader from'../components/Loader';import Message from'../components/Message';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProductView(_ref){var match=_ref.match;var _useParams=useParams(),id=_useParams.id;var navigate=useNavigate();var _useState=useState(1),_useState2=_slicedToArray(_useState,2),quantity=_useState2[0],setQuantity=_useState2[1];var dispatch=useDispatch();/* get productDetails data from redux state */var productDetails=useSelector(function(state){return state.productDetails;});var loading=productDetails.loading,error=productDetails.error,product=productDetails.product;useEffect(function(){dispatch(listProductDetails(id));},[dispatch,match]);var addToCart=function addToCart(){navigate(\"/cart/\".concat(id,\"?quantity=\").concat(quantity));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"btn btn-light my-3\",children:\"Return\"}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"warning\",children:error}):/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsx(Image,{src:product.image,alt:product.name,fluid:true})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(\"h3\",{children:product.name})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Rating,{value:product.rating,text:\"\".concat(product.numReviews),color:'#f8e825'})}),/*#__PURE__*/_jsxs(ListGroup.Item,{children:[\"Price: $\",product.price]}),/*#__PURE__*/_jsxs(ListGroup.Item,{children:[\"Description: \",product.description]})]})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Price:\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"$\",product.price]})})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Status:\"}),/*#__PURE__*/_jsx(Col,{children:product.countInStock>0?'In Stock':'Out of Stock'})]})}),product.countInStock>0&&/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Quantity\"}),/*#__PURE__*/_jsx(Col,{xs:\"auto\",className:\"my-1\",children:/*#__PURE__*/_jsx(Form.Control,{as:\"select\",value:quantity,onChange:function onChange(e){return setQuantity(e.target.value);},children:_toConsumableArray(Array(product.countInStock).keys()).map(function(x){return/*#__PURE__*/_jsx(\"option\",{value:x+1,children:x+1},x+1);})})})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Button,{className:\"btn-block\",onClick:addToCart,disabled:product.countInStock===0,type:\"button\",children:\"Add to Cart\"})})]})})})]})]});}export default ProductView;","map":{"version":3,"sources":["/Users/jacob/Web/django-ecommerce/backend/frontend/src/views/ProductView.js"],"names":["React","useState","useEffect","Link","useParams","useNavigate","Row","Col","Image","ListGroup","Button","Card","Form","useDispatch","useSelector","listProductDetails","Rating","Loader","Message","ProductView","match","id","navigate","quantity","setQuantity","dispatch","productDetails","state","loading","error","product","addToCart","image","name","rating","numReviews","price","description","countInStock","e","target","value","Array","keys","map","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\n// react redux import for global state handling+API calls\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProductDetails } from '../reduxState/actions/productActions'\n// components\nimport Rating from '../components/products/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nfunction ProductView({ match }) {\n    const {id} = useParams()\n    let navigate = useNavigate()\n    const [quantity, setQuantity] = useState(1)\n    const dispatch = useDispatch()\n\n    /* get productDetails data from redux state */\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    useEffect(() => {\n\n        dispatch(listProductDetails(id))\n    }, [dispatch, match])\n\n    const addToCart = () => {\n        navigate(`/cart/${id}?quantity=${quantity}`)\n    }\n    return (\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Return</Link>\n            {\n                loading ? <Loader />\n                        : error ? <Message variant='warning' children={error} /> \n                                : (\n                                    <Row>\n                                        <Col md={6} >\n                                            <Image src={product.image} alt={product.name} fluid /> \n                                        </Col>    \n\n                                        <Col md={3}>\n                                            <ListGroup variant=\"flush\">\n                                                <ListGroup.Item>\n                                                    <h3>{product.name}</h3>\n                                                </ListGroup.Item>\n\n                                                <ListGroup.Item>\n                                                    <Rating value={product.rating} text={`${product.numReviews}`} color={'#f8e825'} />\n                                                </ListGroup.Item>\n\n                                                <ListGroup.Item>\n                                                    Price: ${product.price}\n                                                </ListGroup.Item>\n\n                                                <ListGroup.Item>\n                                                    Description: {product.description}\n                                                </ListGroup.Item> \n                                            </ListGroup>\n                                        </Col>\n\n                                        <Col md={3}>\n                                            <Card>\n                                                <ListGroup variant=\"flush\">\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>Price:</Col>\n                                                            <Col>\n                                                                <strong>${product.price}</strong>\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>Status:</Col>\n                                                            <Col>\n                                                                {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n\n                                                    {\n                                                        product.countInStock > 0 && (\n                                                            <ListGroup.Item>\n                                                                <Row>\n                                                                    <Col>Quantity</Col>\n                                                                    <Col xs='auto' className='my-1'>\n                                                                        <Form.Control\n                                                                            as=\"select\"\n                                                                            value={quantity}\n                                                                            onChange={(e) => setQuantity(e.target.value)}\n                                                                        >\n                                                                            {\n                                                                                [...Array(product.countInStock).keys()].map((x) =>(\n                                                                                    <option key={x + 1} value={x + 1}>\n                                                                                        {x + 1}\n                                                                                    </option>\n                                                                                ))\n                                                                            }\n\n                                                                        </Form.Control>\n                                                                    </Col>\n                                                                </Row>\n                                                            </ListGroup.Item>\n                                                        )\n                                                    }\n\n                                                    <ListGroup.Item>\n                                                        <Button className=\"btn-block\" \n                                                                onClick={addToCart}\n                                                                disabled={product.countInStock === 0} \n                                                                type=\"button\">\n                                                                    Add to Cart\n                                                        </Button>\n                                                    </ListGroup.Item>\n                                                </ListGroup>\n                                            </Card>\n                                        </Col>\n\n                                    </Row>\n                                )\n\n            }\n                \n        </div>\n    )\n}\n\nexport default ProductView"]},"metadata":{},"sourceType":"module"}