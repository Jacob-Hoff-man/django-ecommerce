{"ast":null,"code":"var _jsxFileName = \"/Users/jacob/Web/django-ecommerce/frontend/src/views/PaymentView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux'; //import { savePaymentMethod } from '../reduxState/actions/cartActions'\n// components\n\nimport FormContainer from '../components/FormContainer';\nimport CheckoutProgress from '../components/CheckoutProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PaymentView() {\n  _s();\n\n  let navigate = useNavigate();\n  /* geting shippingAddress in cart from Redux State to ensure it has been submitted */\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const [paymentMethod, setPaymentMethod] = useState('');\n\n  if (!shippingAddress.address) {\n    /* redirect the user to shipping if shippingAddress has not been submitted */\n    navigate('/shipping');\n  }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatchEvent(savePaymentMethod(paymentMethod));\n    navigate('/placeorder');\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutProgress, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          as: \"legend\",\n          children: \"Select Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Credit Card\",\n            id: \"creditCard\",\n            name: \"paymentMethod\",\n            checked: true,\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PaymentView, \"oGNxZILKCbHYhwDHQnLF9wNt7fY=\", false, function () {\n  return [useNavigate, useSelector];\n});\n\n_c = PaymentView;\nexport default PaymentView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentView\");","map":{"version":3,"sources":["/Users/jacob/Web/django-ecommerce/frontend/src/views/PaymentView.js"],"names":["React","useState","useEffect","Navigate","useNavigate","Form","Button","Col","useDispatch","useSelector","FormContainer","CheckoutProgress","PaymentView","navigate","cart","state","shippingAddress","paymentMethod","setPaymentMethod","address","submitHandler","e","preventDefault","dispatchEvent","savePaymentMethod","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,QAAiC,iBAAjC;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;AAEA;;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,MAAIC,QAAQ,GAAGT,WAAW,EAA1B;AACA;;AACA,QAAMU,IAAI,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAsBF,IAA5B;AAEA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,EAAD,CAAlD;;AAGA,MAAG,CAACe,eAAe,CAACG,OAApB,EAA6B;AACzB;AACAN,IAAAA,QAAQ,CAAC,WAAD,CAAR;AACH;;AAED,QAAMO,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,aAAa,CAACC,iBAAiB,CAACP,aAAD,CAAlB,CAAb;AACAJ,IAAAA,QAAQ,CAAC,aAAD,CAAR;AACH,GAJD;;AAMA,sBACI,QAAC,aAAD;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,KAAK,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,KAAK;AAAnC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEO,aAAhB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,GAAD;AAAA,iCACI,QAAC,IAAD,CAAM,KAAN;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,KAAK,EAAC,aAFV;AAGI,YAAA,EAAE,EAAC,YAHP;AAII,YAAA,IAAI,EAAC,eAJT;AAKI,YAAA,OAAO,MALX;AAMI,YAAA,QAAQ,EAAGC,CAAD,IAAOH,gBAAgB,CAACG,CAAC,CAACI,MAAF,CAASC,KAAV;AANrC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA5CQd,W;UACUR,W,EAEFK,W;;;KAHRG,W;AA8CT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Navigate, useNavigate } from 'react-router-dom'\nimport { Form, Button, Col} from 'react-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\n//import { savePaymentMethod } from '../reduxState/actions/cartActions'\n\n// components\nimport FormContainer from '../components/FormContainer'\nimport CheckoutProgress from '../components/CheckoutProgress'\n\nfunction PaymentView() {\n    let navigate = useNavigate()\n    /* geting shippingAddress in cart from Redux State to ensure it has been submitted */\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const [paymentMethod, setPaymentMethod] = useState('')\n\n\n    if(!shippingAddress.address) {\n        /* redirect the user to shipping if shippingAddress has not been submitted */\n        navigate('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatchEvent(savePaymentMethod(paymentMethod))\n        navigate('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutProgress step1 step2 step3 />\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='Credit Card'\n                            id='creditCard'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        />\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Next\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentView"]},"metadata":{},"sourceType":"module"}