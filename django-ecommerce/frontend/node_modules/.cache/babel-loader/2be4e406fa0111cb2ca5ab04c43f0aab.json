{"ast":null,"code":"var _jsxFileName = \"/Users/jacob/Web/django-ecommerce/frontend/src/views/CartView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link, useNavigate, useParams, useSearchParams } from 'react-router-dom';\nimport { Row, Col, ListGroup, Imae, Form, Button, Card } from 'react-bootstrap'; // react redux import for global state handling+API calls\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToCart } from '../reduxState/actions/cartActions'; // components\n\nimport Message from '../components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CartView(_ref) {\n  _s();\n\n  let {\n    match,\n    location\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  /* get quantity parameter from url */\n\n  const [searchParams] = useSearchParams();\n  const quantity = Number(searchParams.get(\"quantity\"));\n  const navigate = useNavigate();\n  /* get cart data from redux state */\n\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  console.log(cartItems);\n  useEffect(() => {\n    /* only calling dispatch when an item is added to cart (if id is present in url) */\n    if (id) {\n      dispatch(addToCart(id, quantity));\n    }\n  }, [dispatch, id, quantity]);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"info\",\n        children: [\"Your cart is empty \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Return\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: cartItems.map\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartView, \"0U6XR1NBK/+lT/4IUpdorM/dWfg=\", false, function () {\n  return [useParams, useSearchParams, useNavigate, useDispatch, useSelector];\n});\n\n_c = CartView;\nexport default CartView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartView\");","map":{"version":3,"sources":["/Users/jacob/Web/django-ecommerce/frontend/src/views/CartView.js"],"names":["React","useEffect","Link","useNavigate","useParams","useSearchParams","Row","Col","ListGroup","Imae","Form","Button","Card","useDispatch","useSelector","addToCart","Message","CartView","match","location","id","searchParams","quantity","Number","get","navigate","dispatch","cart","state","cartItems","console","log","length","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,eAAvC,QAA8D,kBAA9D;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,MAA1C,EAAkDC,IAAlD,QAA8D,iBAA9D,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,mCAA1B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,SAASC,QAAT,OAAuC;AAAA;;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAShB,SAAS,EAAxB;AACA;;AACA,QAAM,CAACiB,YAAD,IAAiBhB,eAAe,EAAtC;AACA,QAAMiB,QAAQ,GAAGC,MAAM,CAACF,YAAY,CAACG,GAAb,CAAiB,UAAjB,CAAD,CAAvB;AAEA,QAAMC,QAAQ,GAAGtB,WAAW,EAA5B;AAEA;;AACA,QAAMuB,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,IAAI,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAgBF,IAAtB;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEA5B,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAGmB,EAAH,EAAO;AACHM,MAAAA,QAAQ,CAACX,SAAS,CAACK,EAAD,EAAKE,QAAL,CAAV,CAAR;AACH;AACJ,GALQ,EAKN,CAACI,QAAD,EAAWN,EAAX,EAAeE,QAAf,CALM,CAAT;AAOA,sBACI,QAAC,GAAD;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQO,SAAS,CAACG,MAAV,KAAqB,CAArB,gBACI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC,MAAjB;AAAA,uDACuB,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADvB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,gBAKI,QAAC,SAAD;AAAW,QAAA,OAAO,EAAC,OAAnB;AAAA,kBAEQH,SAAS,CAACI;AAFlB;AAAA;AAAA;AAAA;AAAA,cARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA1CQhB,Q;UACUb,S,EAEQC,e,EAGNF,W,EAGAU,W,EACJC,W;;;KAVRG,Q;AA4CT,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { Link, useNavigate, useParams, useSearchParams } from 'react-router-dom'\nimport { Row, Col, ListGroup, Imae, Form, Button, Card } from 'react-bootstrap'\n// react redux import for global state handling+API calls\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addToCart } from '../reduxState/actions/cartActions'\n// components\nimport Message from '../components/Message'\n\nfunction CartView({ match, location }) {\n    const { id } = useParams()\n    /* get quantity parameter from url */\n    const [searchParams] = useSearchParams()\n    const quantity = Number(searchParams.get(\"quantity\"))\n\n    const navigate = useNavigate()\n\n    /* get cart data from redux state */\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    console.log(cartItems)\n\n    useEffect(() => {\n        /* only calling dispatch when an item is added to cart (if id is present in url) */\n        if(id) {\n            dispatch(addToCart(id, quantity))\n        }\n    }, [dispatch, id, quantity])\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {\n                    cartItems.length === 0 ? (\n                        <Message variant='info'>\n                            Your cart is empty <Link to='/'>Return</Link>\n                        </Message>\n                    ) : (\n                        <ListGroup variant='flush' >\n                            {\n                                cartItems.map\n                            }\n                        </ListGroup>\n                    )\n                }\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartView"]},"metadata":{},"sourceType":"module"}