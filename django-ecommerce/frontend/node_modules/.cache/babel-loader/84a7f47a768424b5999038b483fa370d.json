{"ast":null,"code":"var _jsxFileName = \"/Users/jacob/Web/django-ecommerce/backend/frontend/src/views/ProfileView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserData, updateUserData } from '../reduxState/actions/userActions';\nimport { USER_UPDATE_RESET } from '../reduxState/constants/userConstants';\nimport { getMyOrders } from '../reduxState/actions/orderActions'; // components\n\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileView() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [messageVariant, setMessageVariant] = useState('');\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  /* getting userData from redux state */\n\n  const userDataState = useSelector(state => state.userData);\n  const {\n    error,\n    loading,\n    user\n  } = userDataState;\n  /* getting userData from userLogin in redux state to ensure user is logged in */\n\n  const userLoginState = useSelector(state => state.userLogin);\n  const {\n    userData\n  } = userLoginState;\n  /* getting sucess from userUpdate in redux state to ensure that userUpdate is cleared appropriately */\n\n  const userUpdateState = useSelector(state => state.userUpdate);\n  const {\n    success\n  } = userUpdateState;\n  /* getting orders from redux state */\n\n  const ordersState = useSelector(state => state.orders);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = ordersState;\n  useEffect(() => {\n    /* redirect the user from this page if they are not logged in */\n    if (!userData) {\n      navigate('/login');\n    } else {\n      if (!user || !user.name || success) {\n        /* ensuring that userUpdate state is cleared after a successful userUpdate submit */\n        dispatch({\n          type: USER_UPDATE_RESET\n        });\n        /* no user info loaded, so dispatch to get it */\n\n        dispatch(getUserData('profile'));\n        /* get orders for current user */\n\n        dispatch(getMyOrders());\n        console.log(orders);\n      } else {\n        /* user info is already loaded, so pre-fill the component state */\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, userData, user, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setMessage('');\n\n    if (password !== confirmPassword) {\n      setMessageVariant('warning');\n      setMessage('Passwords do not match.');\n    } else if (password !== '' && password.length < 8) {\n      setMessageVariant('warning');\n      setMessage('Password must be at least 8 characters long.');\n    } else {\n      dispatch(updateUserData({\n        'id': user._id,\n        'name': name,\n        'email': email,\n        'password': password\n      }));\n      setMessageVariant('success');\n      setMessage('Your profile was successfully updated.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: messageVariant,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 34\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"warning\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 32\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"my-4\",\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"my-4\",\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"my-4\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"my-4\",\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Password Again\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \" Register \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), loadingOrders ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this) : errorOrders ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"warning\",\n        children: errorOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        responsive: true,\n        className: \"table-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.createdAt.substring(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", order.totalPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: 'red'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 95\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                to: `/order/${order._id}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-sm\",\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 41\n            }, this)]\n          }, order._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileView, \"3ngDDihOVNJMJ/Q52G77CkBPf3Q=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileView;\nexport default ProfileView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileView\");","map":{"version":3,"sources":["/Users/jacob/Web/django-ecommerce/backend/frontend/src/views/ProfileView.js"],"names":["React","useState","useEffect","Link","useNavigate","Form","Button","Row","Col","Table","LinkContainer","useDispatch","useSelector","getUserData","updateUserData","USER_UPDATE_RESET","getMyOrders","Loader","Message","ProfileView","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","messageVariant","setMessageVariant","navigate","dispatch","userDataState","state","userData","error","loading","user","userLoginState","userLogin","userUpdateState","userUpdate","success","ordersState","orders","loadingOrders","errorOrders","type","console","log","submitHandler","e","preventDefault","length","_id","target","value","map","order","createdAt","substring","totalPrice","isPaid","paidAt","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate} from 'react-router-dom'\nimport { Form, Button, Row, Col, Table} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserData, updateUserData  } from '../reduxState/actions/userActions'\nimport { USER_UPDATE_RESET } from '../reduxState/constants/userConstants'\nimport { getMyOrders } from '../reduxState/actions/orderActions'\n\n// components\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nfunction ProfileView() {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n    const [messageVariant, setMessageVariant] = useState('')\n\n    let navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    /* getting userData from redux state */\n    const userDataState = useSelector(state => state.userData)\n    const { error, loading, user } = userDataState\n\n    /* getting userData from userLogin in redux state to ensure user is logged in */\n    const userLoginState = useSelector(state => state.userLogin)\n    const { userData } = userLoginState\n\n    /* getting sucess from userUpdate in redux state to ensure that userUpdate is cleared appropriately */\n    const userUpdateState= useSelector(state => state.userUpdate)\n    const { success } = userUpdateState\n\n    /* getting orders from redux state */\n    const ordersState = useSelector(state => state.orders)\n    const { loading:loadingOrders, error:errorOrders, orders } = ordersState\n\n    useEffect(() => {\n        /* redirect the user from this page if they are not logged in */\n        if(!userData) {\n            navigate('/login')\n        } else {\n\n\n\n            if(!user || !user.name || success) {\n                /* ensuring that userUpdate state is cleared after a successful userUpdate submit */\n                dispatch({ type: USER_UPDATE_RESET })\n                /* no user info loaded, so dispatch to get it */\n                dispatch(getUserData('profile'))\n                /* get orders for current user */\n                dispatch(getMyOrders())\n                console.log(orders)\n            } else {\n                /* user info is already loaded, so pre-fill the component state */\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, userData, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        setMessage('')\n\n        if(password !== confirmPassword) {\n            setMessageVariant('warning')\n            setMessage('Passwords do not match.')\n        } else if (password !== '' && password.length < 8){\n            setMessageVariant('warning')\n            setMessage('Password must be at least 8 characters long.')\n        } else {\n            dispatch(updateUserData({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessageVariant('success')\n            setMessage('Your profile was successfully updated.')\n        }\n\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n                    { message && <Message variant={messageVariant}>{message}</Message>}\n                    { error && <Message variant='warning'>{error}</Message> }\n                    { loading && <Loader /> }\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group className='my-4' controlId='name'>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control \n                                required\n                                type='name' \n                                placeholder='Enter Name' \n                                value={name} \n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className='my-4' controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control \n                                required\n                                type='email' \n                                placeholder='Enter Email' \n                                value={email} \n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className='my-4' controlId='password'>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control \n                                type='password' \n                                placeholder='Enter Password' \n                                value={password} \n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className='my-4' controlId='confirmPassword'>\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control \n                                type='password' \n                                placeholder='Enter Password Again' \n                                value={confirmPassword} \n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Button type='submit' variant='primary'> Register </Button>\n\n                    </Form>\n\n            </Col>\n\n            <Col md={3}>\n                <h2>My Orders</h2>\n                { loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='warning'>{errorOrders}</Message>\n                ) : (\n                    <Table striped responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Id</th>\n                                <th>Date</th>\n                                <th>Total</th>\n                                <th>Paid</th>\n                                <th>Delivered</th>\n                            </tr>\n                        </thead>\n                        \n                        <tbody >\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n                                        <td>{order.isPaid ? order.paidAt.substring(0, 10) : ( <i className='fas fa-times' style={{ color: 'red' }}></i> )}</td>\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button className='btn-sm'>Details</Button>\n                                            </LinkContainer>\n                                        </td>\n                                    </tr>\n                                ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileView"]},"metadata":{},"sourceType":"module"}