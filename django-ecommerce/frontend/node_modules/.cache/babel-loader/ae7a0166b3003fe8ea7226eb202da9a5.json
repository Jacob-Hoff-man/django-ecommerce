{"ast":null,"code":"var _jsxFileName = \"/Users/jacob/Web/django-ecommerce/frontend/src/views/ShippingView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveShippingAddress } from '../reduxState/actions/cartActions'; // components\n\nimport FormContainer from '../components/FormContainer';\nimport CheckoutProgress from '../components/CheckoutProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShippingView() {\n  _s();\n\n  let navigate = useNavigate();\n  /* geting shippingAddress in cart from Redux State */\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const dispatch = useDispatch();\n  /* preloading state with shippingAddress values, if any */\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [zipCode, setZipCode] = useState(shippingAddress.zipCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      address,\n      city,\n      zipCode,\n      country\n    }));\n    /* redirect user to payment view */\n\n    navigate('/payment');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shipping Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"my-4\",\n          controlId: \"address\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Street Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Enter Address\",\n            value: address ? address : '',\n            onChange: e => setAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"my-4\",\n          controlId: \"city\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Enter City\",\n            value: city ? city : '',\n            onChange: e => setCity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"my-4\",\n          controlId: \"zipCode\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Zip Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Enter Zip Code\",\n            value: zipCode ? zipCode : '',\n            onChange: e => setZipCode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"my-4\",\n          controlId: \"country\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Enter Country\",\n            value: country ? country : '',\n            onChange: e => setCountry(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ShippingView, \"cwZLHPX40adcFNGKuWfibVD5mxU=\", false, function () {\n  return [useNavigate, useSelector, useDispatch];\n});\n\n_c = ShippingView;\nexport default ShippingView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingView\");","map":{"version":3,"sources":["/Users/jacob/Web/django-ecommerce/frontend/src/views/ShippingView.js"],"names":["React","useState","useEffect","useNavigate","Form","Button","useDispatch","useSelector","saveShippingAddress","FormContainer","CheckoutProgress","ShippingView","navigate","cart","state","shippingAddress","dispatch","address","setAddress","city","setCity","zipCode","setZipCode","country","setCountry","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Form, Button} from 'react-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { saveShippingAddress } from '../reduxState/actions/cartActions'\n\n\n// components\nimport FormContainer from '../components/FormContainer'\nimport CheckoutProgress from '../components/CheckoutProgress'\n\nfunction ShippingView() {\n    let navigate = useNavigate()\n\n    /* geting shippingAddress in cart from Redux State */\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    /* preloading state with shippingAddress values, if any */\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [zipCode, setZipCode] = useState(shippingAddress.zipCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, zipCode, country }))\n        /* redirect user to payment view */\n        navigate('/payment')\n    }\n\n    return (<div>\n        \n        <FormContainer>\n\n            <h1>Shipping Information</h1>\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group className='my-4' controlId='address'>\n                    <Form.Label>Street Address</Form.Label>\n                    <Form.Control \n                        required\n                        type='text' \n                        placeholder='Enter Address' \n                        value={address ? address : ''} \n                        onChange={(e) => setAddress(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group className='my-4' controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control \n                        required\n                        type='text' \n                        placeholder='Enter City' \n                        value={city ? city : ''} \n                        onChange={(e) => setCity(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group className='my-4' controlId='zipCode'>\n                    <Form.Label>Zip Code</Form.Label>\n                    <Form.Control \n                        required\n                        type='text' \n                        placeholder='Enter Zip Code' \n                        value={zipCode ? zipCode : ''} \n                        onChange={(e) => setZipCode(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Form.Group className='my-4' controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control \n                        required\n                        type='text' \n                        placeholder='Enter Country' \n                        value={country ? country : ''} \n                        onChange={(e) => setCountry(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>Next</Button>\n            </Form>\n        </FormContainer>\n\n    </div>)\n}\n\nexport default ShippingView"]},"metadata":{},"sourceType":"module"}