{"ast":null,"code":"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants';\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\n  /* get product data from product id */\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`);\n  /* adds the specified id to the cart upon dispatch */\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      quantity\n    }\n  });\n  /* setting cart items to local storage using getState*/\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  /* removes the specified id from the cart upon dispatch */\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  /* setting cart items to local storage using getState*/\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const saveShippingAddress = data => dispatch => {\n  /* removes the specified id from the cart upon dispatch */\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  /* setting cart items to local storage using getState*/\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};","map":{"version":3,"sources":["/Users/jacob/Web/django-ecommerce/frontend/src/reduxState/actions/cartActions.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","id","quantity","dispatch","getState","data","get","type","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","saveShippingAddress"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,aADJ,EAEIC,gBAFJ,EAGIC,0BAHJ,EAIIC,wBAJJ,QAMO,4BANP;AAQA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,QAAL,KAAkB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACrE;AACA,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAMV,KAAK,CAACW,GAAN,CAAW,iBAAgBL,EAAG,EAA9B,CAArB;AAEA;;AACAE,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAEX,aADD;AAELY,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAEJ,IAAI,CAACK,GADT;AAELC,MAAAA,IAAI,EAAEN,IAAI,CAACM,IAFN;AAGLC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAHP;AAILC,MAAAA,KAAK,EAAER,IAAI,CAACQ,KAJP;AAKLC,MAAAA,YAAY,EAAET,IAAI,CAACS,YALd;AAMLZ,MAAAA;AANK;AAFJ,GAAD,CAAR;AAYA;;AACAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAlC;AAEH,CApBM;AAsBP,OAAO,MAAMC,cAAc,GAAIpB,EAAD,IAAQ,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC1D;AACAD,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAEV,gBADD;AAELW,IAAAA,OAAO,EAAEP;AAFJ,GAAD,CAAR;AAKA;;AACAc,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAlC;AACH,CATM;AAWP,OAAO,MAAME,mBAAmB,GAAIjB,IAAD,IAAWF,QAAD,IAAc;AACvD;AACAA,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAET,0BADD;AAELU,IAAAA,OAAO,EAAEH;AAFJ,GAAD,CAAR;AAKA;;AACAU,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAxC;AACH,CATM","sourcesContent":["import axios from 'axios'\n\nimport {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD,\n\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\n    /* get product data from product id */\n    const {data} = await axios.get(`/api/products/${id}`)\n\n    /* adds the specified id to the cart upon dispatch */\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            quantity\n        }\n    })\n\n    /* setting cart items to local storage using getState*/\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    /* removes the specified id from the cart upon dispatch */\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    })\n\n    /* setting cart items to local storage using getState*/\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    /* removes the specified id from the cart upon dispatch */\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    })\n\n    /* setting cart items to local storage using getState*/\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\n"]},"metadata":{},"sourceType":"module"}