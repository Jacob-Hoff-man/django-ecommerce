{"ast":null,"code":"import _slicedToArray from\"/Users/jacob/Web/django-ecommerce/backend/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{Link,useNavigate}from'react-router-dom';import{Form,Button,Row,Col,Table}from'react-bootstrap';import{LinkContainer}from'react-router-bootstrap';import{useDispatch,useSelector}from'react-redux';import{getUserData,updateUserData}from'../reduxState/actions/userActions';import{USER_UPDATE_RESET}from'../reduxState/constants/userConstants';import{getMyOrders}from'../reduxState/actions/orderActions';// components\nimport Loader from'../components/Loader';import Message from'../components/Message';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProfileView(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),messageVariant=_useState12[0],setMessageVariant=_useState12[1];var navigate=useNavigate();var dispatch=useDispatch();/* getting userData from redux state */var userDataState=useSelector(function(state){return state.userData;});var error=userDataState.error,loading=userDataState.loading,user=userDataState.user;/* getting userData from userLogin in redux state to ensure user is logged in */var userLoginState=useSelector(function(state){return state.userLogin;});var userData=userLoginState.userData;/* getting sucess from userUpdate in redux state to ensure that userUpdate is cleared appropriately */var userUpdateState=useSelector(function(state){return state.userUpdate;});var success=userUpdateState.success;/* getting orders from redux state */var ordersState=useSelector(function(state){return state.orders;});var loadingOrders=ordersState.loading,errorOrders=ordersState.error,orders=ordersState.orders;useEffect(function(){/* redirect the user from this page if they are not logged in */if(!userData){navigate('/login');}else{if(!user||!user.name||success){/* ensuring that userUpdate state is cleared after a successful userUpdate submit */dispatch({type:USER_UPDATE_RESET});/* no user info loaded, so dispatch to get it */dispatch(getUserData('profile'));/* get orders for current user */dispatch(getMyOrders());console.log(orders);}else{/* user info is already loaded, so pre-fill the component state */setName(user.name);setEmail(user.email);}}},[dispatch,userData,user,success]);var submitHandler=function submitHandler(e){e.preventDefault();setMessage('');if(password!==confirmPassword){setMessageVariant('warning');setMessage('Passwords do not match.');}else if(password!==''&&password.length<8){setMessageVariant('warning');setMessage('Password must be at least 8 characters long.');}else{dispatch(updateUserData({'id':user._id,'name':name,'email':email,'password':password}));setMessageVariant('success');setMessage('Your profile was successfully updated.');}};return/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{md:3,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"User Profile\"}),message&&/*#__PURE__*/_jsx(Message,{variant:messageVariant,children:message}),error&&/*#__PURE__*/_jsx(Message,{variant:\"warning\",children:error}),loading&&/*#__PURE__*/_jsx(Loader,{}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"my-4\",controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"name\",placeholder:\"Enter Name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"my-4\",controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"email\",placeholder:\"Enter Email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"my-4\",controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Enter Password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"my-4\",controlId:\"confirmPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Enter Password Again\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\" Register \"})]})]}),/*#__PURE__*/_jsxs(Col,{md:3,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"My Orders\"}),loadingOrders?/*#__PURE__*/_jsx(Loader,{}):errorOrders?/*#__PURE__*/_jsx(Message,{variant:\"warning\",children:errorOrders}):/*#__PURE__*/_jsxs(Table,{striped:true,responsive:true,className:\"table-sm\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Id\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Paid\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Delivered\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:orders.map(function(order){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:order._id}),/*#__PURE__*/_jsx(\"td\",{children:order.createdAt.substring(0,10)}),/*#__PURE__*/_jsxs(\"td\",{children:[\"$\",order.totalPrice]}),/*#__PURE__*/_jsx(\"td\",{children:order.isPaid?order.paidAt.substring(0,10):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\",style:{color:'red'}})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(LinkContainer,{to:\"/order/\".concat(order._id),children:/*#__PURE__*/_jsx(Button,{className:\"btn-sm\",children:\"Details\"})})})]},order._id);})})]})]})]});}export default ProfileView;","map":{"version":3,"sources":["/Users/jacob/Web/django-ecommerce/backend/frontend/src/views/ProfileView.js"],"names":["React","useState","useEffect","Link","useNavigate","Form","Button","Row","Col","Table","LinkContainer","useDispatch","useSelector","getUserData","updateUserData","USER_UPDATE_RESET","getMyOrders","Loader","Message","ProfileView","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","messageVariant","setMessageVariant","navigate","dispatch","userDataState","state","userData","error","loading","user","userLoginState","userLogin","userUpdateState","userUpdate","success","ordersState","orders","loadingOrders","errorOrders","type","console","log","submitHandler","e","preventDefault","length","_id","target","value","map","order","createdAt","substring","totalPrice","isPaid","paidAt","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate} from 'react-router-dom'\nimport { Form, Button, Row, Col, Table} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserData, updateUserData  } from '../reduxState/actions/userActions'\nimport { USER_UPDATE_RESET } from '../reduxState/constants/userConstants'\nimport { getMyOrders } from '../reduxState/actions/orderActions'\n\n// components\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nfunction ProfileView() {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n    const [messageVariant, setMessageVariant] = useState('')\n\n    let navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    /* getting userData from redux state */\n    const userDataState = useSelector(state => state.userData)\n    const { error, loading, user } = userDataState\n\n    /* getting userData from userLogin in redux state to ensure user is logged in */\n    const userLoginState = useSelector(state => state.userLogin)\n    const { userData } = userLoginState\n\n    /* getting sucess from userUpdate in redux state to ensure that userUpdate is cleared appropriately */\n    const userUpdateState= useSelector(state => state.userUpdate)\n    const { success } = userUpdateState\n\n    /* getting orders from redux state */\n    const ordersState = useSelector(state => state.orders)\n    const { loading:loadingOrders, error:errorOrders, orders } = ordersState\n\n    useEffect(() => {\n        /* redirect the user from this page if they are not logged in */\n        if(!userData) {\n            navigate('/login')\n        } else {\n\n\n\n            if(!user || !user.name || success) {\n                /* ensuring that userUpdate state is cleared after a successful userUpdate submit */\n                dispatch({ type: USER_UPDATE_RESET })\n                /* no user info loaded, so dispatch to get it */\n                dispatch(getUserData('profile'))\n                /* get orders for current user */\n                dispatch(getMyOrders())\n                console.log(orders)\n            } else {\n                /* user info is already loaded, so pre-fill the component state */\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, userData, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        setMessage('')\n\n        if(password !== confirmPassword) {\n            setMessageVariant('warning')\n            setMessage('Passwords do not match.')\n        } else if (password !== '' && password.length < 8){\n            setMessageVariant('warning')\n            setMessage('Password must be at least 8 characters long.')\n        } else {\n            dispatch(updateUserData({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessageVariant('success')\n            setMessage('Your profile was successfully updated.')\n        }\n\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n                    { message && <Message variant={messageVariant}>{message}</Message>}\n                    { error && <Message variant='warning'>{error}</Message> }\n                    { loading && <Loader /> }\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group className='my-4' controlId='name'>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control \n                                required\n                                type='name' \n                                placeholder='Enter Name' \n                                value={name} \n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className='my-4' controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control \n                                required\n                                type='email' \n                                placeholder='Enter Email' \n                                value={email} \n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className='my-4' controlId='password'>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control \n                                type='password' \n                                placeholder='Enter Password' \n                                value={password} \n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group className='my-4' controlId='confirmPassword'>\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control \n                                type='password' \n                                placeholder='Enter Password Again' \n                                value={confirmPassword} \n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Button type='submit' variant='primary'> Register </Button>\n\n                    </Form>\n\n            </Col>\n\n            <Col md={3}>\n                <h2>My Orders</h2>\n                { loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='warning'>{errorOrders}</Message>\n                ) : (\n                    <Table striped responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Id</th>\n                                <th>Date</th>\n                                <th>Total</th>\n                                <th>Paid</th>\n                                <th>Delivered</th>\n                            </tr>\n                        </thead>\n                        \n                        <tbody >\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n                                        <td>{order.isPaid ? order.paidAt.substring(0, 10) : ( <i className='fas fa-times' style={{ color: 'red' }}></i> )}</td>\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button className='btn-sm'>Details</Button>\n                                            </LinkContainer>\n                                        </td>\n                                    </tr>\n                                ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileView"]},"metadata":{},"sourceType":"module"}