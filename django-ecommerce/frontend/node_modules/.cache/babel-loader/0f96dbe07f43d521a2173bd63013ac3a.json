{"ast":null,"code":"import _asyncToGenerator from\"/Users/jacob/Web/django-ecommerce/backend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/jacob/Web/django-ecommerce/backend/frontend/node_modules/@babel/runtime/regenerator/index.js\";import{USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL,USER_LOGOUT,USER_REGISTER_REQUEST,USER_REGISTER_SUCCESS,USER_REGISTER_FAIL,USER_DATA_REQUEST,USER_DATA_SUCCESS,USER_DATA_FAIL,USER_DATA_RESET,USER_UPDATE_REQUEST,USER_UPDATE_SUCCESS,USER_UPDATE_FAIL,USER_UPDATE_RESET}from'../constants/userConstants';import{ORDERS_RESET}from'../constants/orderConstants';import axios from'axios';export var login=function login(email,password){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var config,_yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:USER_LOGIN_REQUEST});/* post request data configuration */config={headers:{'Content-type':'application/json'}};/* generate the post request data with axios */_context.next=5;return axios.post('/api/users/login/',{'username':email,'password':password},config);case 5:_yield$axios$post=_context.sent;data=_yield$axios$post.data;dispatch({type:USER_LOGIN_SUCCESS,payload:data});/* setting user data to local storage */localStorage.setItem('userData',JSON.stringify(data));_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);dispatch({type:USER_LOGIN_FAIL,payload:_context.t0.response&&_context.t0.response.data.detail?_context.t0.response.data.detail:_context.t0.message});case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var logout=function logout(dispatch){/* remove userData from local storage */localStorage.removeItem('userData');/* immediately update global state to remove userData */dispatch({type:USER_LOGOUT});/* reset the stored userData for updating a profile whenever logging out */dispatch({type:USER_DATA_RESET});/* reset the stored orders whenever logging out */dispatch({type:ORDERS_RESET});};export var register=function register(name,email,password){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,_yield$axios$post2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:USER_REGISTER_REQUEST});/* request data configuration */config={headers:{'Content-type':'application/json'}};/* generate the post request data with axios */_context2.next=5;return axios.post('/api/users/register/',{'name':name,'email':email,'password':password},config);case 5:_yield$axios$post2=_context2.sent;data=_yield$axios$post2.data;dispatch({type:USER_REGISTER_SUCCESS,payload:data});/* immediately log in the new user */dispatch({type:USER_LOGIN_SUCCESS,payload:data});/* setting user data to local storage */localStorage.setItem('userData',JSON.stringify(data));_context2.next=15;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](0);dispatch({type:USER_REGISTER_FAIL,payload:_context2.t0.response&&_context2.t0.response.data.detail?_context2.t0.response.data.detail:_context2.t0.message});case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[0,12]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var getUserData=function getUserData(id){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch,getState){var _getState,userData,config,_yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;dispatch({type:USER_DATA_REQUEST});/* getting userData from global state */_getState=getState(),userData=_getState.userLogin.userData;/* request data configuration */config={headers:{'Content-type':'application/json','Authorization':\"Bearer \".concat(userData.token)}};/* generate the post request data with axios */_context3.next=6;return axios.get(\"/api/users/\".concat(id,\"/\"),config);case 6:_yield$axios$get=_context3.sent;data=_yield$axios$get.data;dispatch({type:USER_DATA_SUCCESS,payload:data});/* setting user data to local storage */localStorage.setItem('userData',JSON.stringify(data));_context3.next=15;break;case 12:_context3.prev=12;_context3.t0=_context3[\"catch\"](0);dispatch({type:USER_DATA_FAIL,payload:_context3.t0.response&&_context3.t0.response.data.detail?_context3.t0.response.data.detail:_context3.t0.message});case 15:case\"end\":return _context3.stop();}}},_callee3,null,[[0,12]]);}));return function(_x3,_x4){return _ref3.apply(this,arguments);};}();};export var updateUserData=function updateUserData(user){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch,getState){var _getState2,userData,config,_yield$axios$put,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;dispatch({type:USER_UPDATE_REQUEST});/* getting userData from global state */_getState2=getState(),userData=_getState2.userLogin.userData;/* request data configuration */config={headers:{'Content-type':'application/json','Authorization':\"Bearer \".concat(userData.token)}};/* generate the post request data with axios */_context4.next=6;return axios.put(\"/api/users/profile/update/\",user,config);case 6:_yield$axios$put=_context4.sent;data=_yield$axios$put.data;dispatch({type:USER_UPDATE_SUCCESS,payload:data});/* log in the user with the updated userData */dispatch({type:USER_LOGIN_SUCCESS,payload:data});/* setting updated user data to local storage */localStorage.setItem('userData',JSON.stringify(data));_context4.next=16;break;case 13:_context4.prev=13;_context4.t0=_context4[\"catch\"](0);dispatch({type:USER_UPDATE_FAIL,payload:_context4.t0.response&&_context4.t0.response.data.detail?_context4.t0.response.data.detail:_context4.t0.message});case 16:case\"end\":return _context4.stop();}}},_callee4,null,[[0,13]]);}));return function(_x5,_x6){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/jacob/Web/django-ecommerce/backend/frontend/src/reduxState/actions/userActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DATA_REQUEST","USER_DATA_SUCCESS","USER_DATA_FAIL","USER_DATA_RESET","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDERS_RESET","axios","login","email","password","dispatch","type","config","headers","post","data","payload","localStorage","setItem","JSON","stringify","response","detail","message","logout","removeItem","register","name","getUserData","id","getState","userData","userLogin","token","get","updateUserData","user","put"],"mappings":"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","sourcesContent":["import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DATA_REQUEST,\n    USER_DATA_SUCCESS,\n    USER_DATA_FAIL,\n    USER_DATA_RESET,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n} from '../constants/userConstants'\n\nimport { ORDERS_RESET } from '../constants/orderConstants'\n\nimport axios from 'axios'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        })\n\n        /* post request data configuration */\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n        /* generate the post request data with axios */\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data  \n        })\n\n        /* setting user data to local storage */\n        localStorage.setItem('userData', JSON.stringify(data))\n\n    } catch (err) {\n        dispatch({\n            type:USER_LOGIN_FAIL,\n            payload: err.response && err.response.data.detail ? err.response.data.detail : err.message\n        })\n    }\n}\n\nexport const logout = (dispatch) => {\n    /* remove userData from local storage */\n    localStorage.removeItem('userData')\n    /* immediately update global state to remove userData */\n    dispatch({\n        type: USER_LOGOUT\n    })\n    /* reset the stored userData for updating a profile whenever logging out */\n    dispatch({\n        type: USER_DATA_RESET\n    })\n    /* reset the stored orders whenever logging out */\n    dispatch({\n        type: ORDERS_RESET\n    })\n\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST,\n        })\n\n        /* request data configuration */\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n        /* generate the post request data with axios */\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data  \n        })\n        /* immediately log in the new user */\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data  \n        })\n\n        /* setting user data to local storage */\n        localStorage.setItem('userData', JSON.stringify(data))\n\n    } catch (err) {\n        dispatch({\n            type:USER_REGISTER_FAIL,\n            payload: err.response && err.response.data.detail ? err.response.data.detail : err.message\n        })\n    }\n}\n\nexport const getUserData = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DATA_REQUEST,\n        })\n        /* getting userData from global state */\n        const { userLogin: { userData } } = getState()\n        \n        /* request data configuration */\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${userData.token}`\n            }\n        }\n        /* generate the post request data with axios */\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DATA_SUCCESS,\n            payload: data  \n        })\n\n        /* setting user data to local storage */\n        localStorage.setItem('userData', JSON.stringify(data))\n\n    } catch (err) {\n        dispatch({\n            type:USER_DATA_FAIL,\n            payload: err.response && err.response.data.detail ? err.response.data.detail : err.message\n        })\n    }\n}\n\nexport const updateUserData = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST,\n        })\n        /* getting userData from global state */\n        const { userLogin: { userData } } = getState()\n        \n        /* request data configuration */\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${userData.token}`\n            }\n        }\n        /* generate the post request data with axios */\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data  \n        })\n\n        /* log in the user with the updated userData */\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data  \n        })\n        /* setting updated user data to local storage */\n        localStorage.setItem('userData', JSON.stringify(data))\n\n    } catch (err) {\n        dispatch({\n            type:USER_UPDATE_FAIL,\n            payload: err.response && err.response.data.detail ? err.response.data.detail : err.message\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}