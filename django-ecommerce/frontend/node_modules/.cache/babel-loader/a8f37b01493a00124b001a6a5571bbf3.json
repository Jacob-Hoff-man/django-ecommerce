{"ast":null,"code":"var _jsxFileName = \"/Users/jacob/Web/django-ecommerce/frontend/src/views/ProfileView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserData } from '../reduxState/actions/userActions'; // components\n\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileView() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  /* getting userData from redux state */\n\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    error,\n    loading,\n    userData\n  } = userRegister;\n  /* redirect the user if they are already logged in */\n\n  useEffect(() => {\n    if (userData) {\n      navigate(-1);\n    }\n  }, [navigate, userData]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setMessage('');\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match.');\n    } else if (password.length < 8) {\n      setMessage('Password must be at least 8 characters long.');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileView, \"R0ZZpYT+iP+VyEh/B7Dy2qFqTJc=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = ProfileView;\nexport default ProfileView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileView\");","map":{"version":3,"sources":["/Users/jacob/Web/django-ecommerce/frontend/src/views/ProfileView.js"],"names":["React","useState","useEffect","Link","useNavigate","Form","Button","Row","Col","useDispatch","useSelector","getUserData","Loader","Message","ProfileView","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","navigate","dispatch","userRegister","state","error","loading","userData","submitHandler","e","preventDefault","length","register"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,WAAf,QAAiC,kBAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAsC,iBAAtC;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA6B,mCAA7B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,eAAD,EAAkBC,kBAAlB,IAAwCrB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAAtC;AAEA,MAAIwB,QAAQ,GAAGrB,WAAW,EAA1B;AACA,QAAMsB,QAAQ,GAAGjB,WAAW,EAA5B;AAEA;;AACA,QAAMkB,YAAY,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACD,YAAhB,CAAhC;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA+BJ,YAArC;AAEA;;AACAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG6B,QAAH,EAAa;AACTN,MAAAA,QAAQ,CAAC,CAAC,CAAF,CAAR;AACH;AACJ,GAJQ,EAIN,CAACA,QAAD,EAAWM,QAAX,CAJM,CAAT;;AAMA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,UAAU,CAAC,EAAD,CAAV;;AAEA,QAAGL,QAAQ,KAAKE,eAAhB,EAAiC;AAC7BG,MAAAA,UAAU,CAAC,yBAAD,CAAV;AACH,KAFD,MAEO,IAAIL,QAAQ,CAACgB,MAAT,GAAkB,CAAtB,EAAwB;AAC3BX,MAAAA,UAAU,CAAC,8CAAD,CAAV;AACH,KAFM,MAEA;AACHE,MAAAA,QAAQ,CAACU,QAAQ,CAACrB,IAAD,EAAOE,KAAP,EAAcE,QAAd,CAAT,CAAR;AACH;AAEJ,GAZD;;AAaF,sBACE,QAAC,GAAD;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA/CQL,W;UAOUV,W,EACEK,W,EAGIC,W;;;KAXhBI,W;AAiDT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate} from 'react-router-dom'\nimport { Form, Button, Row, Col} from 'react-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserData  } from '../reduxState/actions/userActions'\n\n// components\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nfunction ProfileView() {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    let navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    /* getting userData from redux state */\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userData } = userRegister\n\n    /* redirect the user if they are already logged in */\n    useEffect(() => {\n        if(userData) {\n            navigate(-1)\n        }\n    }, [navigate, userData])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        setMessage('')\n\n        if(password !== confirmPassword) {\n            setMessage('Passwords do not match.')\n        } else if (password.length < 8){\n            setMessage('Password must be at least 8 characters long.')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n  return (\n    <Row>\n        <Col md={3}>\n            <h2>User Profile</h2>\n\n        </Col>\n\n        <Col md={3}>\n            <h2>My Orders</h2>\n            \n        </Col>\n    </Row>\n  )\n}\n\nexport default ProfileView"]},"metadata":{},"sourceType":"module"}