{"ast":null,"code":"import _slicedToArray from\"/Users/jacob/Web/django-ecommerce/backend/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{Navigate,useNavigate}from'react-router-dom';import{Form,Button,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import{savePaymentMethod}from'../reduxState/actions/cartActions';// components\nimport FormContainer from'../components/FormContainer';import CheckoutProgress from'../components/CheckoutProgress';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PaymentView(){var navigate=useNavigate();/* geting shippingAddress in cart from Redux State to ensure it has been submitted */var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var _useState=useState('Credit Card'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var dispatch=useDispatch();if(!shippingAddress.address){/* redirect the user to shipping if shippingAddress has not been submitted */navigate('/shipping');}var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));navigate('/placeorder');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutProgress,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Credit Card\",id:\"creditCard\",name:\"paymentMethod\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Next\"})]})]});}export default PaymentView;","map":{"version":3,"sources":["/Users/jacob/Web/django-ecommerce/backend/frontend/src/views/PaymentView.js"],"names":["React","useState","useEffect","Navigate","useNavigate","Form","Button","Col","useDispatch","useSelector","savePaymentMethod","FormContainer","CheckoutProgress","PaymentView","navigate","cart","state","shippingAddress","paymentMethod","setPaymentMethod","dispatch","address","submitHandler","e","preventDefault","target","value"],"mappings":"wIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,QAAT,CAAmBC,WAAnB,KAAsC,kBAAtC,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,KAAiC,iBAAjC,CAEA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,iBAAT,KAAkC,mCAAlC,CAEA;AACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,gCAA7B,C,wFAEA,QAASC,CAAAA,WAAT,EAAuB,CACnB,GAAIC,CAAAA,QAAQ,CAAGV,WAAW,EAA1B,CACA,qFACA,GAAMW,CAAAA,IAAI,CAAGN,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACD,IAAV,EAAN,CAAxB,CACA,GAAQE,CAAAA,eAAR,CAA4BF,IAA5B,CAAQE,eAAR,CAEA,cAA0ChB,QAAQ,CAAC,aAAD,CAAlD,wCAAOiB,aAAP,eAAsBC,gBAAtB,eAEA,GAAMC,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CAEA,GAAG,CAACS,eAAe,CAACI,OAApB,CAA6B,CACzB,6EACAP,QAAQ,CAAC,WAAD,CAAR,CACH,CAED,GAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CACzBA,CAAC,CAACC,cAAF,GACAJ,QAAQ,CAACV,iBAAiB,CAACQ,aAAD,CAAlB,CAAR,CACAJ,QAAQ,CAAC,aAAD,CAAR,CACH,CAJD,CAMA,mBACI,MAAC,aAAD,yBACI,KAAC,gBAAD,EAAkB,KAAK,KAAvB,CAAwB,KAAK,KAA7B,CAA8B,KAAK,KAAnC,EADJ,cAEI,MAAC,IAAD,EAAM,QAAQ,CAAEQ,aAAhB,wBACI,MAAC,IAAD,CAAM,KAAN,yBACI,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADJ,cAEI,KAAC,GAAD,wBACI,KAAC,IAAD,CAAM,KAAN,EACI,IAAI,CAAC,OADT,CAEI,KAAK,CAAC,aAFV,CAGI,EAAE,CAAC,YAHP,CAII,IAAI,CAAC,eAJT,CAKI,OAAO,KALX,CAMI,QAAQ,CAAE,kBAACC,CAAD,QAAOJ,CAAAA,gBAAgB,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EANd,EADJ,EAFJ,GADJ,cAeI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,kBAfJ,GAFJ,GADJ,CAwBH,CAED,cAAeb,CAAAA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Navigate, useNavigate } from 'react-router-dom'\nimport { Form, Button, Col} from 'react-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { savePaymentMethod } from '../reduxState/actions/cartActions'\n\n// components\nimport FormContainer from '../components/FormContainer'\nimport CheckoutProgress from '../components/CheckoutProgress'\n\nfunction PaymentView() {\n    let navigate = useNavigate()\n    /* geting shippingAddress in cart from Redux State to ensure it has been submitted */\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const [paymentMethod, setPaymentMethod] = useState('Credit Card')\n\n    const dispatch = useDispatch()\n\n    if(!shippingAddress.address) {\n        /* redirect the user to shipping if shippingAddress has not been submitted */\n        navigate('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        navigate('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutProgress step1 step2 step3 />\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='Credit Card'\n                            id='creditCard'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        />\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Next\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentView"]},"metadata":{},"sourceType":"module"}