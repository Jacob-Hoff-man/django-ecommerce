{"ast":null,"code":"var _jsxFileName = \"/Users/jacob/Web/django-ecommerce/frontend/src/views/CartView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link, useNavigate, useParams, useSearchParams } from 'react-router-dom';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'; // react redux import for global state handling+API calls\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToCart, removeFromCart } from '../reduxState/actions/cartActions'; // components\n\nimport Message from '../components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CartView(_ref) {\n  _s();\n\n  let {\n    match,\n    location\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  /* get quantity parameter from url */\n\n  const [searchParams] = useSearchParams();\n  const quantity = Number(searchParams.get(\"quantity\"));\n  const navigate = useNavigate();\n  /* get cart data from redux state */\n\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  /* getting userData from userLogin in redux state to ensure user is logged in */\n\n  const userLoginState = useSelector(state => state.userLogin);\n  const {\n    userData\n  } = userLoginState;\n  useEffect(() => {\n    /* only calling dispatch when an item is added to cart (if id is present in url) */\n    if (id) {\n      dispatch(addToCart(id, quantity));\n    }\n  }, [dispatch, id, quantity]);\n\n  const removeFromCartHandler = id => {\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    navigate('/login?redirect=shipping');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"info\",\n        children: [\"Your cart is empty \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Return\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: item.image,\n                alt: item.name,\n                fluid: true,\n                rounded: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/product/${item.product}`,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: [\"$\", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: item.quantity,\n                onChange: e => dispatch(addToCart(item.product, Number(e.target.value))),\n                children: [...Array(item.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: x + 1,\n                  children: x + 1\n                }, x + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 61\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                variant: \"light\",\n                onClick: () => removeFromCartHandler(item.product),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 41\n          }, this)\n        }, item.product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Subtotal (\", cartItems.reduce((accumulator, item) => accumulator + item.quantity, 0), \" items)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), \"$\", cartItems.reduce((accumulator, item) => accumulator + item.quantity * item.price, 0).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: \"btn-block\",\n            disabled: cartItems.length === 0,\n            onClick: checkoutHandler,\n            children: \"Checkout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartView, \"T/03Pnpnkko3ZgJuen7CtgDwrsU=\", false, function () {\n  return [useParams, useSearchParams, useNavigate, useDispatch, useSelector, useSelector];\n});\n\n_c = CartView;\nexport default CartView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartView\");","map":{"version":3,"sources":["/Users/jacob/Web/django-ecommerce/frontend/src/views/CartView.js"],"names":["React","useEffect","Link","useNavigate","useParams","useSearchParams","Row","Col","ListGroup","Image","Form","Button","Card","useDispatch","useSelector","addToCart","removeFromCart","Message","CartView","match","location","id","searchParams","quantity","Number","get","navigate","dispatch","cart","state","cartItems","userLoginState","userLogin","userData","removeFromCartHandler","checkoutHandler","length","map","item","image","name","product","price","e","target","value","Array","countInStock","keys","x","reduce","accumulator","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Link, useNavigate, useParams, useSearchParams } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\n// react redux import for global state handling+API calls\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addToCart, removeFromCart } from '../reduxState/actions/cartActions'\n// components\nimport Message from '../components/Message'\n\nfunction CartView({ match, location }) {\n    const { id } = useParams()\n    /* get quantity parameter from url */\n    const [searchParams] = useSearchParams()\n    const quantity = Number(searchParams.get(\"quantity\"))\n\n    const navigate = useNavigate()\n\n    /* get cart data from redux state */\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    /* getting userData from userLogin in redux state to ensure user is logged in */\n    const userLoginState = useSelector(state => state.userLogin)\n    const { userData } = userLoginState\n\n\n    useEffect(() => {\n        /* only calling dispatch when an item is added to cart (if id is present in url) */\n        if(id) {\n            dispatch(addToCart(id, quantity))\n        }\n    }, [dispatch, id, quantity])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    } \n\n    const checkoutHandler = () => {\n        navigate('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {\n                    cartItems.length === 0 ? (\n                        <Message variant='info'>\n                            Your cart is empty <Link to='/'>Return</Link>\n                        </Message>\n                    ) : (\n                        <ListGroup variant='flush' >\n                            {\n                                cartItems.map(item => (\n                                    <ListGroup.Item key={item.product}>\n                                        <Row>\n                                            <Col md={2}>\n                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                            </Col>\n\n                                            <Col md={3}>\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                            </Col>\n\n                                            <Col md={2}>\n                                                ${item.price}\n                                            </Col>\n\n                                            <Col md={3}>\n                                                <Form.Control\n                                                        as=\"select\"\n                                                        value={item.quantity}\n                                                        onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                                >\n                                                    {\n                                                        [...Array(item.countInStock).keys()].map((x) =>(\n                                                            <option key={x + 1} value={x + 1}>\n                                                                {x + 1}\n                                                            </option>\n                                                        ))\n                                                    }\n\n                                                </Form.Control>\n                                            </Col>\n\n                                            <Col md={1}>\n                                                <Button\n                                                    type='button'\n                                                    variant='light'\n                                                    onClick={() => removeFromCartHandler(item.product)}\n                                                >\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </Col>\n\n                                        </Row>\n                                    </ListGroup.Item>\n                                ))\n                            }\n                        </ListGroup>\n                    )\n                }\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((accumulator, item) => accumulator + item.quantity, 0)} items)</h2>\n                            ${cartItems.reduce((accumulator, item) => accumulator + item.quantity * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item>\n                            <Button\n                                type='button'\n                                className='btn-block'\n                                disabled={cartItems.length === 0}\n                                onClick={checkoutHandler}\n                            >\n                                Checkout\n                            </Button>\n                    </ListGroup.Item>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartView"]},"metadata":{},"sourceType":"module"}