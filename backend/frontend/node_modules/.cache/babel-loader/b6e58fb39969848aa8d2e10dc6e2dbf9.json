{"ast":null,"code":"var _jsxFileName = \"/Users/jacob/Web/django-ecommerce/backend/frontend/src/views/EventView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listEventDetails, listRaffleTickets, createRaffleTicket } from '../reduxState/actions/eventActions'; // components\n\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventView() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [messageVariant, setMessageVariant] = useState('');\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  /* getting eventDetails from redux state */\n\n  const eventDetailsState = useSelector(state => state.eventDetails);\n  const {\n    loading,\n    event,\n    error\n  } = eventDetailsState;\n  /* getting orders from redux state */\n\n  const raffleTicketsState = useSelector(state => state.raffleTickets);\n  const {\n    loading: loadingRaffleTickets,\n    raffleTickets,\n    error: errorRaffleTickets\n  } = ordersState;\n  /* getting sucess from userUpdate in redux state to ensure that userUpdate is cleared appropriately */\n\n  const raffleTicketCreateState = useSelector(state => state.raffleTicketCreate);\n  const {\n    success\n  } = raffleTicketCreateState;\n  useEffect(() => {\n    dispatch(listEventDetails(1));\n    dispatch(listRaffleTickets(event._id));\n    console.log(event);\n    console.log(raffleTickets);\n  }, []);\n\n  const createRaffleTicket = e => {\n    e.preventDefault();\n    setMessage('');\n    console.log('created'); // if(password !== confirmPassword) {\n    //     setMessageVariant('warning')\n    //     setMessage('Passwords do not match.')\n    // } else if (password !== '' && password.length < 8){\n    //     setMessageVariant('warning')\n    //     setMessage('Password must be at least 8 characters long.')\n    // } else {\n    //     dispatch(updateUserData({\n    //         'id': user._id,\n    //         'name': name,\n    //         'email': email,\n    //         'password': password\n    //     }))\n    //     setMessageVariant('success')\n    //     setMessage('Your profile was successfully updated.')\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"warning\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: event.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), loadingOrders ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this) : errorOrders ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"warning\",\n        children: errorOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        responsive: true,\n        className: \"table-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.createdAt.substring(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", order.totalPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: 'red'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 95\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                to: `/order/${order._id}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-sm\",\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 41\n            }, this)]\n          }, order._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EventView, \"shF9ZLj1ngGOHN8x0bvdRyDkaGA=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = EventView;\nexport default EventView;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventView\");","map":{"version":3,"sources":["/Users/jacob/Web/django-ecommerce/backend/frontend/src/views/EventView.js"],"names":["React","useState","useEffect","Link","useNavigate","Form","Button","Row","Col","Table","LinkContainer","useDispatch","useSelector","listEventDetails","listRaffleTickets","createRaffleTicket","Loader","Message","EventView","name","setName","email","setEmail","message","setMessage","messageVariant","setMessageVariant","navigate","dispatch","eventDetailsState","state","eventDetails","loading","event","error","raffleTicketsState","raffleTickets","loadingRaffleTickets","errorRaffleTickets","ordersState","raffleTicketCreateState","raffleTicketCreate","success","_id","console","log","e","preventDefault","loadingOrders","errorOrders","orders","map","order","createdAt","substring","totalPrice","isPaid","paidAt","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,WAAf,QAAiC,kBAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,KAAjC,QAA6C,iBAA7C;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,EAA8CC,kBAA9C,QAAwE,oCAAxE,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACwB,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,CAAC,EAAD,CAApD;AAEA,MAAI0B,QAAQ,GAAGvB,WAAW,EAA1B;AACA,QAAMwB,QAAQ,GAAGjB,WAAW,EAA5B;AAEA;;AACA,QAAMkB,iBAAiB,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACC,YAAhB,CAArC;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA4BL,iBAAlC;AAEA;;AACA,QAAMM,kBAAkB,GAAGvB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACM,aAAhB,CAAtC;AACA,QAAM;AAAEJ,IAAAA,OAAO,EAACK,oBAAV;AAAgCD,IAAAA,aAAhC;AAA+CF,IAAAA,KAAK,EAACI;AAArD,MAA4EC,WAAlF;AAEA;;AACA,QAAMC,uBAAuB,GAAE5B,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACW,kBAAhB,CAA1C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcF,uBAApB;AAEAtC,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,QAAQ,CAACf,gBAAgB,CAAC,CAAD,CAAjB,CAAR;AACAe,IAAAA,QAAQ,CAACd,iBAAiB,CAACmB,KAAK,CAACU,GAAP,CAAlB,CAAR;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYT,aAAZ;AACH,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMrB,kBAAkB,GAAI+B,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAvB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAH8B,CAI9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GArBD;;AAuBA,sBACI,QAAC,GAAD;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,gBACKb,OAAO,gBACJ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADI,GAEAE,KAAK,gBACL,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC,SAAjB;AAAA,kBAA4BX;AAA5B;AAAA;AAAA;AAAA;AAAA,cADK,gBAGD;AAAA,kBAAKU,KAAK,CAACd;AAAX;AAAA;AAAA;AAAA;AAAA;AANhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEM6B,aAAa,gBACX,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADW,GAEXC,WAAW,gBACX,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC,SAAjB;AAAA,kBAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA,cADW,gBAGX,QAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,UAAU,MAAzB;AAA0B,QAAA,SAAS,EAAC,UAApC;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAA,oBACSC,MAAM,CAACC,GAAP,CAAWC,KAAK,iBACb;AAAA,oCACI;AAAA,wBAAKA,KAAK,CAACT;AAAX;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKS,KAAK,CAACC,SAAN,CAAgBC,SAAhB,CAA0B,CAA1B,EAA6B,EAA7B;AAAL;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,8BAAMF,KAAK,CAACG,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA,wBAAKH,KAAK,CAACI,MAAN,GAAeJ,KAAK,CAACK,MAAN,CAAaH,SAAb,CAAuB,CAAvB,EAA0B,EAA1B,CAAf,gBAAiD;AAAG,gBAAA,SAAS,EAAC,cAAb;AAA4B,gBAAA,KAAK,EAAE;AAAEI,kBAAAA,KAAK,EAAE;AAAT;AAAnC;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA,qCACI,QAAC,aAAD;AAAe,gBAAA,EAAE,EAAG,UAASN,KAAK,CAACT,GAAI,EAAvC;AAAA,uCACI,QAAC,MAAD;AAAQ,kBAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA,aAASS,KAAK,CAACT,GAAf;AAAA;AAAA;AAAA;AAAA,kBADH;AADT;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPR;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmDH;;GAvGQzB,S;UAMUd,W,EACEO,W,EAGSC,W,EAICA,W,EAIIA,W;;;KAlB1BM,S;AAyGT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate} from 'react-router-dom'\nimport { Form, Button, Row, Col, Table} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listEventDetails, listRaffleTickets, createRaffleTicket } from '../reduxState/actions/eventActions'\n\n// components\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nfunction EventView() {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [message, setMessage] = useState('')\n    const [messageVariant, setMessageVariant] = useState('')\n\n    let navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    /* getting eventDetails from redux state */\n    const eventDetailsState = useSelector(state => state.eventDetails)\n    const { loading, event, error } = eventDetailsState\n\n    /* getting orders from redux state */\n    const raffleTicketsState = useSelector(state => state.raffleTickets)\n    const { loading:loadingRaffleTickets, raffleTickets, error:errorRaffleTickets } = ordersState\n\n    /* getting sucess from userUpdate in redux state to ensure that userUpdate is cleared appropriately */\n    const raffleTicketCreateState= useSelector(state => state.raffleTicketCreate)\n    const { success } = raffleTicketCreateState\n\n    useEffect(() => {\n        dispatch(listEventDetails(1))\n        dispatch(listRaffleTickets(event._id))\n\n        console.log(event)\n        console.log(raffleTickets)\n    }, [])\n\n    const createRaffleTicket = (e) => {\n        e.preventDefault()\n        setMessage('')\n        console.log('created')\n        // if(password !== confirmPassword) {\n        //     setMessageVariant('warning')\n        //     setMessage('Passwords do not match.')\n        // } else if (password !== '' && password.length < 8){\n        //     setMessageVariant('warning')\n        //     setMessage('Password must be at least 8 characters long.')\n        // } else {\n        //     dispatch(updateUserData({\n        //         'id': user._id,\n        //         'name': name,\n        //         'email': email,\n        //         'password': password\n        //     }))\n        //     setMessageVariant('success')\n        //     setMessage('Your profile was successfully updated.')\n        // }\n\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                {loading ? (\n                    <Loader />\n                    ) : error ? (\n                        <Message variant='warning'>{message}</Message>\n                        ) : (\n                            <h2>{event.name}</h2>\n                        )\n                }                    \n            </Col>\n\n            <Col md={3}>\n                <h2>My Orders</h2>\n                { loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='warning'>{errorOrders}</Message>\n                ) : (\n                    <Table striped responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Id</th>\n                                <th>Date</th>\n                                <th>Total</th>\n                                <th>Paid</th>\n                                <th>Delivered</th>\n                            </tr>\n                        </thead>\n                        \n                        <tbody >\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n                                        <td>{order.isPaid ? order.paidAt.substring(0, 10) : ( <i className='fas fa-times' style={{ color: 'red' }}></i> )}</td>\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button className='btn-sm'>Details</Button>\n                                            </LinkContainer>\n                                        </td>\n                                    </tr>\n                                ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default EventView"]},"metadata":{},"sourceType":"module"}