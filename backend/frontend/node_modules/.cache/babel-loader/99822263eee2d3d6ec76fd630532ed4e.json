{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,Link}from'react-router-dom';import{Button,Row,Col,ListGroup,Image,Card}from'react-bootstrap';// react redux import for global state handling+API calls\nimport{useDispatch,useSelector}from'react-redux';import{createOrder}from'../reduxState/actions/orderActions';import{ORDER_CREATE_RESET}from'../reduxState/constants/orderConstants';// components\nimport Message from'../components/Message';import CheckoutProgress from'../components/CheckoutProgress';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PlaceOrderView(){var orderCreate=useSelector(function(state){return state.orderCreate;});var order=orderCreate.order,error=orderCreate.error,success=orderCreate.success;var dispatch=useDispatch();var navigate=useNavigate();/* get cart from redux global state */var cart=useSelector(function(state){return state.cart;});/* temporary cart values, only stored in this view */ /* TODO: make constants for shiping cost, tax rate */cart.itemsPrice=cart.cartItems.reduce(function(accumulator,item){return accumulator+item.price*item.quantity;},0).toFixed(2);/* itemsPrice over $100 is free shipping, 10 under */cart.shippingPrice=(cart.itemsPrice>100?0:10).toFixed(2);/* using 6% sales tax */cart.taxPrice=(cart.itemsPrice*0.06).toFixed(2);cart.totalPrice=(Number(cart.itemsPrice)+Number(cart.shippingPrice)+Number(cart.taxPrice)).toFixed(2);useEffect(function(){/* redirect to the payment selection view if payment method is not selected */if(!cart.paymentMethod){navigate('/payment');}if(success){navigate(\"/order/\".concat(order._id));/* remove order from state */dispatch({type:ORDER_CREATE_RESET});}},[success,navigate]);var placeOrder=function placeOrder(){dispatch(createOrder({orderItems:cart.cartItems,shippingAddress:cart.shippingAddress,paymentMethod:cart.paymentMethod,itemsPrice:cart.itemsPrice,shippingPrice:cart.shippingPrice,taxPrice:cart.taxPrice,totalPrice:cart.totalPrice}));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CheckoutProgress,{step1:true,step2:true,step3:true,step4:true}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:8,children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shipping\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"u\",{children:\"Shipping Address:\"}),' ',cart.shippingAddress.address,\", \",cart.shippingAddress.city,\", \",cart.shippingAddress.zipCode,\", \",cart.shippingAddress.country]})]}),/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Payment\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"u\",{children:\"Payment Method:\"}),' ',cart.paymentMethod]})]}),/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shopping Cart\"}),cart.cartItems.length===0?/*#__PURE__*/_jsx(Message,{variant:\"warning\",children:\"Your cart is empty.\"}):/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:cart.cartItems.map(function(item,index){return/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Image,{src:item.image,alt:item.name,fluid:true,rounded:true})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Link,{to:\"/product/\".concat(item.product),children:item.name})}),/*#__PURE__*/_jsxs(Col,{md:4,children:[item.quantity,\" x $\",item.price]}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",(item.quantity*item.price).toFixed(2)]})]})},index);})})]})]})}),/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Order Summary\"})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Item:\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",cart.itemsPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Shipping:\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",cart.shippingPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Tax:\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",cart.taxPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Total Price:\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",cart.totalPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:error&&/*#__PURE__*/_jsx(Message,{variant:\"warning\",children:error})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"button\",className:\"btn-block\",disabled:cart.cartItems===0,onClick:placeOrder,children:\"Place Order\"})})]})})})]})]});}export default PlaceOrderView;","map":{"version":3,"sources":["/Users/jacob/Web/django-ecommerce/backend/frontend/src/views/PlaceOrderView.js"],"names":["React","useState","useEffect","useNavigate","Link","Button","Row","Col","ListGroup","Image","Card","useDispatch","useSelector","createOrder","ORDER_CREATE_RESET","Message","CheckoutProgress","PlaceOrderView","orderCreate","state","order","error","success","dispatch","navigate","cart","itemsPrice","cartItems","reduce","accumulator","item","price","quantity","toFixed","shippingPrice","taxPrice","totalPrice","Number","paymentMethod","_id","type","placeOrder","orderItems","shippingAddress","address","city","zipCode","country","length","map","index","image","name","product"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useNavigate, Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\n// react redux import for global state handling+API calls\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createOrder } from '../reduxState/actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../reduxState/constants/orderConstants'\n\n// components\nimport Message from '../components/Message'\nimport CheckoutProgress from '../components/CheckoutProgress'\n\nfunction PlaceOrderView() {\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    /* get cart from redux global state */\n    const cart = useSelector(state => state.cart)\n    /* temporary cart values, only stored in this view */\n    /* TODO: make constants for shiping cost, tax rate */\n    cart.itemsPrice = cart.cartItems.reduce((accumulator, item) => accumulator + item.price * item.quantity, 0).toFixed(2)\n    /* itemsPrice over $100 is free shipping, 10 under */\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    /* using 6% sales tax */\n    cart.taxPrice = (cart.itemsPrice * 0.06).toFixed(2)\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n\n    useEffect(() => {\n\n        /* redirect to the payment selection view if payment method is not selected */\n        if(!cart.paymentMethod) {\n            navigate('/payment')\n        }\n\n        if(success) {\n            navigate(`/order/${order._id}`)\n            /* remove order from state */\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, navigate])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n    return (\n        <div>\n            <CheckoutProgress step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <u>Shipping Address:</u>{' '}\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}, {cart.shippingAddress.zipCode}, {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment</h2>\n                            <p>\n                                <u>Payment Method:</u>{' '}\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Shopping Cart</h2>\n                            { \n                                cart.cartItems.length === 0 ? \n                                <Message variant='warning'>\n                                    Your cart is empty.\n                                </Message>\n                                :\n                                <ListGroup variant='flush'>\n                                    {\n                                        cart.cartItems.map((item, index) => \n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col>\n                                                        <Image src={item.image} alt={item.name} fluid rounded/>\n                                                    </Col>\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n                                                    <Col md={4}>\n                                                        {item.quantity} x ${item.price}  \n                                                    </Col>\n                                                    <Col>\n                                                         ${(item.quantity * item.price).toFixed(2)}               \n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        )}\n                                </ListGroup>\n                                \n                            }\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Item:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total Price:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                { error && <Message variant='warning'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button type='button' \n                                        className='btn-block'\n                                        disabled={cart.cartItems === 0}\n                                        onClick={placeOrder}\n                                >Place Order</Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n            \n        </div>\n    )\n}\n\nexport default PlaceOrderView"]},"metadata":{},"sourceType":"module"}