{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link,useParams}from'react-router-dom';import{Row,Col,ListGroup,Image,Card}from'react-bootstrap';// react redux import for global state handling+API calls\nimport{useDispatch,useSelector}from'react-redux';import{getOrderDetails}from'../reduxState/actions/orderActions';// components\nimport Message from'../components/Message';import Loader from'../components/Loader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function OrderView(){var _useParams=useParams(),id=_useParams.id;/* get orderDetails from global redux state */var orderDetails=useSelector(function(state){return state.orderDetails;});var order=orderDetails.order,error=orderDetails.error,loading=orderDetails.loading;var dispatch=useDispatch();if(!loading&&!error){order.itemsPrice=order.orderItems.reduce(function(accumulator,item){return accumulator+item.price*item.quantity;},0).toFixed(2);}useEffect(function(){if(!order||order._id!==Number(id)){dispatch(getOrderDetails(id));}},[order,id]);return loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"warning\",children:error}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Order #\",order._id,\" has been confirmed!\"]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:8,children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shipping\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"u\",{children:\"Name:\"}),\" \",order.user.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"u\",{children:\"Email:\"}),\" \",/*#__PURE__*/_jsx(\"a\",{style:{textDecoration:'none'},href:\"mailto:{order.user.email}\",children:order.user.email})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"u\",{children:\"Shipping Address:\"}),' ',order.shippingAddress.address,\", \",order.shippingAddress.city,\", \",order.shippingAddress.zipCode,\", \",order.shippingAddress.country]}),order.isDelivered?/*#__PURE__*/_jsxs(Message,{variant:\"success\",children:[\"Order delivered on \",order.deliveredAt,\".\"]}):/*#__PURE__*/_jsx(Message,{variant:\"warning\",children:\"Order has not been delivered.\"})]}),/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Payment\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"u\",{children:\"Payment Method:\"}),' ',order.paymentMethod]}),order.isPaid?/*#__PURE__*/_jsxs(Message,{variant:\"success\",children:[\"Paid on \",order.paidAt,\".\"]}):/*#__PURE__*/_jsx(Message,{variant:\"warning\",children:\"Order has not been paid for.\"})]}),/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Ordered Items\"}),order.orderItems.length===0?/*#__PURE__*/_jsx(Message,{variant:\"warning\",children:\"Order is empty.\"}):/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:order.orderItems.map(function(item,index){return/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Image,{src:item.image,alt:item.name,fluid:true,rounded:true})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Link,{to:\"/product/\".concat(item.product),children:item.name})}),/*#__PURE__*/_jsxs(Col,{md:4,children:[item.quantity,\" x $\",item.price]}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",(item.quantity*item.price).toFixed(2)]})]})},index);})})]})]})}),/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Order Summary\"})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Item:\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",order.itemsPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Shipping:\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",order.shippingPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Tax:\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",order.taxPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Total Price:\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",order.totalPrice]})]})})]})})})]})]});}export default OrderView;","map":{"version":3,"sources":["/Users/jacob/Web/django-ecommerce/backend/frontend/src/views/OrderView.js"],"names":["React","useState","useEffect","Link","useParams","Row","Col","ListGroup","Image","Card","useDispatch","useSelector","getOrderDetails","Message","Loader","OrderView","id","orderDetails","state","order","error","loading","dispatch","itemsPrice","orderItems","reduce","accumulator","item","price","quantity","toFixed","_id","Number","user","name","textDecoration","email","shippingAddress","address","city","zipCode","country","isDelivered","deliveredAt","paymentMethod","isPaid","paidAt","length","map","index","image","product","shippingPrice","taxPrice","totalPrice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\n// react redux import for global state handling+API calls\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getOrderDetails } from '../reduxState/actions/orderActions'\n\n// components\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n\nfunction OrderView() {\n    const { id } = useParams()\n    /* get orderDetails from global redux state */\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const dispatch = useDispatch()\n\n    if(!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((accumulator, item) => accumulator + item.price * item.quantity, 0).toFixed(2)\n\n    }\n\n\n\n    useEffect(() => {\n        if(!order || order._id !== Number(id)) {\n            dispatch(getOrderDetails(id))\n\n        }\n    }, [order, id])\n\n    return loading ? (\n        <Loader/>\n        ) : error ? (\n            <Message variant='warning'>{error}</Message>\n                ) : (\n                    <div>\n                        <h1>Order #{order._id} has been confirmed!</h1>\n                        <Row>\n                            <Col md={8}>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Shipping</h2>\n                                        <p>\n                                            <u>Name:</u> {order.user.name}\n                                        </p>\n                                        <p>\n                                            <u>Email:</u> <a style={{textDecoration: 'none'}} href={`mailto:{order.user.email}`}>{order.user.email}</a>\n                                        </p>\n                                        <p>\n                                            <u>Shipping Address:</u>{' '}\n                                            {order.shippingAddress.address}, {order.shippingAddress.city}, {order.shippingAddress.zipCode}, {order.shippingAddress.country}\n                                        </p>\n                                        { order.isDelivered ? (\n                                            <Message variant='success'>Order delivered on {order.deliveredAt}.</Message>\n                                        ) : (\n                                            <Message variant='warning'>Order has not been delivered.</Message>\n                                        )}\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <h2>Payment</h2>\n                                        <p>\n                                            <u>Payment Method:</u>{' '}\n                                            {order.paymentMethod}\n                                        </p>\n                                        { order.isPaid ? (\n                                            <Message variant='success'>Paid on {order.paidAt}.</Message>\n                                        ) : (\n                                            <Message variant='warning'>Order has not been paid for.</Message>\n                                        )}\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <h2>Ordered Items</h2>\n                                        { \n                                            order.orderItems.length === 0 ? \n                                            <Message variant='warning'>\n                                                Order is empty.\n                                            </Message>\n                                            :\n                                            <ListGroup variant='flush'>\n                                                {\n                                                    order.orderItems.map((item, index) => \n                                                        <ListGroup.Item key={index}>\n                                                            <Row>\n                                                                <Col>\n                                                                    <Image src={item.image} alt={item.name} fluid rounded/>\n                                                                </Col>\n                                                                <Col>\n                                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                                </Col>\n                                                                <Col md={4}>\n                                                                    {item.quantity} x ${item.price}  \n                                                                </Col>\n                                                                <Col>\n                                                                    ${(item.quantity * item.price).toFixed(2)}               \n                                                                </Col>\n                                                            </Row>\n                                                        </ListGroup.Item>\n                                                    )}\n                                            </ListGroup>\n                                            \n                                        }\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n\n                            <Col md={4}>\n                                <Card>\n                                    <ListGroup variant='flush'>\n                                        <ListGroup.Item>\n                                            <h2>Order Summary</h2>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>Item:</Col>\n                                                <Col>${order.itemsPrice}</Col>\n                                            </Row>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>Shipping:</Col>\n                                                <Col>${order.shippingPrice}</Col>\n                                            </Row>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>Tax:</Col>\n                                                <Col>${order.taxPrice}</Col>\n                                            </Row>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>Total Price:</Col>\n                                                <Col>${order.totalPrice}</Col>\n                                            </Row>\n                                        </ListGroup.Item>\n\n                                    </ListGroup>\n                                </Card>\n                            </Col>\n                        </Row>\n                        \n                    </div>\n    )\n}\n\nexport default OrderView"]},"metadata":{},"sourceType":"module"}