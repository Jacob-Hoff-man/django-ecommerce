{"ast":null,"code":"var _jsxFileName = \"/Users/jacob/Web/django-ecommerce/backend/frontend/src/views/ProductView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'; // react redux import for global state handling+API calls\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProductDetails } from '../reduxState/actions/productActions'; // components\n\nimport Rating from '../components/products/Rating';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductView(_ref) {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  let navigate = useNavigate();\n  const [quantity, setQuantity] = useState(1);\n  const dispatch = useDispatch();\n  /* get productDetails data from redux state */\n\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  useEffect(() => {\n    dispatch(listProductDetails(id));\n  }, [dispatch, match]);\n\n  const addToCart = () => {\n    navigate(`/cart/${id}?quantity=${quantity}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"btn btn-light my-3\",\n      children: \"Return\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 27\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"warning\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: product.rating,\n              text: `${product.numReviews}`,\n              color: '#f8e825'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Price: $\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Description: \", product.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 61\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"$\", product.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 61\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 61\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: product.countInStock > 0 ? 'In Stock' : 'Out of Stock'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 61\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 53\n            }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 69\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: \"auto\",\n                  className: \"my-1\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    value: quantity,\n                    onChange: e => setQuantity(e.target.value),\n                    children: [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: x + 1,\n                      children: x + 1\n                    }, x + 1, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 85\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 73\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 69\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 65\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block\",\n                onClick: addToCart,\n                disabled: product.countInStock === 0,\n                type: \"button\",\n                children: \"Add to Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductView, \"egAqnZD3l1MquAdYmrBV/O/CeZ8=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSelector];\n});\n\n_c = ProductView;\nexport default ProductView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductView\");","map":{"version":3,"sources":["/Users/jacob/Web/django-ecommerce/backend/frontend/src/views/ProductView.js"],"names":["React","useState","useEffect","Link","useParams","useNavigate","Row","Col","Image","ListGroup","Button","Card","Form","useDispatch","useSelector","listProductDetails","Rating","Loader","Message","ProductView","match","id","navigate","quantity","setQuantity","dispatch","productDetails","state","loading","error","product","addToCart","image","name","rating","numReviews","price","description","countInStock","e","target","value","Array","keys","map","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\n// react redux import for global state handling+API calls\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProductDetails } from '../reduxState/actions/productActions'\n// components\nimport Rating from '../components/products/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nfunction ProductView({ match }) {\n    const {id} = useParams()\n    let navigate = useNavigate()\n    const [quantity, setQuantity] = useState(1)\n    const dispatch = useDispatch()\n\n    /* get productDetails data from redux state */\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    useEffect(() => {\n\n        dispatch(listProductDetails(id))\n\n    }, [dispatch, match])\n\n    const addToCart = () => {\n        navigate(`/cart/${id}?quantity=${quantity}`)\n    }\n    return (\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Return</Link>\n            {\n                loading ? <Loader />\n                        : error ? <Message variant='warning' children={error} /> \n                                : (\n                                    <Row>\n                                        <Col md={6} >\n                                            <Image src={product.image} alt={product.name} fluid /> \n                                        </Col>    \n\n                                        <Col md={3}>\n                                            <ListGroup variant=\"flush\">\n                                                <ListGroup.Item>\n                                                    <h3>{product.name}</h3>\n                                                </ListGroup.Item>\n\n                                                <ListGroup.Item>\n                                                    <Rating value={product.rating} text={`${product.numReviews}`} color={'#f8e825'} />\n                                                </ListGroup.Item>\n\n                                                <ListGroup.Item>\n                                                    Price: ${product.price}\n                                                </ListGroup.Item>\n\n                                                <ListGroup.Item>\n                                                    Description: {product.description}\n                                                </ListGroup.Item> \n                                            </ListGroup>\n                                        </Col>\n\n                                        <Col md={3}>\n                                            <Card>\n                                                <ListGroup variant=\"flush\">\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>Price:</Col>\n                                                            <Col>\n                                                                <strong>${product.price}</strong>\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>Status:</Col>\n                                                            <Col>\n                                                                {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n\n                                                    {\n                                                        product.countInStock > 0 && (\n                                                            <ListGroup.Item>\n                                                                <Row>\n                                                                    <Col>Quantity</Col>\n                                                                    <Col xs='auto' className='my-1'>\n                                                                        <Form.Control\n                                                                            as=\"select\"\n                                                                            value={quantity}\n                                                                            onChange={(e) => setQuantity(e.target.value)}\n                                                                        >\n                                                                            {\n                                                                                [...Array(product.countInStock).keys()].map((x) =>(\n                                                                                    <option key={x + 1} value={x + 1}>\n                                                                                        {x + 1}\n                                                                                    </option>\n                                                                                ))\n                                                                            }\n\n                                                                        </Form.Control>\n                                                                    </Col>\n                                                                </Row>\n                                                            </ListGroup.Item>\n                                                        )\n                                                    }\n\n                                                    <ListGroup.Item>\n                                                        <Button className=\"btn-block\" \n                                                                onClick={addToCart}\n                                                                disabled={product.countInStock === 0} \n                                                                type=\"button\">\n                                                                    Add to Cart\n                                                        </Button>\n                                                    </ListGroup.Item>\n                                                </ListGroup>\n                                            </Card>\n                                        </Col>\n\n                                    </Row>\n                                )\n\n            }\n                \n        </div>\n    )\n}\n\nexport default ProductView"]},"metadata":{},"sourceType":"module"}