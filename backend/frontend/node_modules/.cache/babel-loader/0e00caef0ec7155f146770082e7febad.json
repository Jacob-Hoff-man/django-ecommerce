{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_LOGOUT } from '../constants/userConstants';\nimport axios from 'axios';\nexport const login = (email, password) => async dispatch => {\n  try {\n    console.log;\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    /* post request data configuration */\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    /* generate the post request data with axios */\n\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    /* setting user data to local storage */\n\n    localStorage.setItem('userData', JSON.stringify(data));\n  } catch (err) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: err.response && err.response.data.detail ? err.response.data.detail : err.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/jacob/Web/django-ecommerce/frontend/src/reduxState/actions/userActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_LOGOUT","axios","login","email","password","dispatch","console","log","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","err","response","detail","message"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,iBAJJ,QAKO,4BALP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR;AACAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEX;AADD,KAAD,CAAR;AAIA;;AACA,UAAMY,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA;;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,IAAN,CACnB,mBADmB,EAEnB;AAAE,kBAAYT,KAAd;AAAqB,kBAAYC;AAAjC,KAFmB,EAGnBK,MAHmB,CAAvB;AAMAJ,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,kBADD;AAELe,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKA;;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AAEH,GA3BD,CA2BE,OAAOO,GAAP,EAAY;AACVb,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAACT,eADA;AAELc,MAAAA,OAAO,EAAEK,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,MAAlC,GAA2CF,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,MAA7D,GAAsEF,GAAG,CAACG;AAF9E,KAAD,CAAR;AAIH;AACJ,CAlCM","sourcesContent":["import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_LOGOUT,\n} from '../constants/userConstants'\n\nimport axios from 'axios'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        console.log\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        })\n\n        /* post request data configuration */\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n        /* generate the post request data with axios */\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data  \n        })\n\n        /* setting user data to local storage */\n        localStorage.setItem('userData', JSON.stringify(data))\n\n    } catch (err) {\n        dispatch({\n            type:USER_LOGIN_FAIL,\n            payload: err.response && err.response.data.detail ? err.response.data.detail : err.message\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}